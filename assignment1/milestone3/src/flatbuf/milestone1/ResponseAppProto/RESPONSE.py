# automatically generated by the FlatBuffers compiler, do not modify

# namespace: ResponseAppProto

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class RESPONSE(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = RESPONSE()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsRESPONSE(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # RESPONSE
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # RESPONSE
    def Code(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # RESPONSE
    def Contents(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Start(builder): builder.StartObject(2)
def RESPONSEStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddCode(builder, code): builder.PrependInt8Slot(0, code, 0)
def RESPONSEAddCode(builder, code):
    """This method is deprecated. Please switch to AddCode."""
    return AddCode(builder, code)
def AddContents(builder, contents): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(contents), 0)
def RESPONSEAddContents(builder, contents):
    """This method is deprecated. Please switch to AddContents."""
    return AddContents(builder, contents)
def End(builder): return builder.EndObject()
def RESPONSEEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)